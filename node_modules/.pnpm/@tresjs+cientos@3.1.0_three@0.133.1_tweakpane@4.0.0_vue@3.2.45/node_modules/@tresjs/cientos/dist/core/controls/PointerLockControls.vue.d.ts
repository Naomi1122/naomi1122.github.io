import { Camera } from 'three';
export interface PointerLockControlsProps {
    /**
     * Whether to make this the default controls.
     *
     * @default false
     * @type {boolean}
     * @memberof PointerLockControlsProps
     * @see https://threejs.org/docs/index.html?q=pointe#examples/en/controls/PointerLockControls
     */
    makeDefault?: boolean;
    /**
     * The camera to control.
     *
     * @default false
     * @type {boolean}
     * @memberof PointerLockControlsProps
     * @see https://threejs.org/docs/index.html?q=pointe#examples/en/controls/PointerLockControls
     */
    camera?: Camera;
    /**
     * The dom element to listen to.
     *
     * @type {HTMLElement}
     * @memberof PointerLockControlsProps
     * @see https://threejs.org/docs/index.html?q=pointe#examples/en/controls/PointerLockControls
     */
    domElement?: HTMLElement;
    /**
     * The trigger id.
     *
     * @type {string}
     * @memberof PointerLockControlsProps
     * @see https://threejs.org/docs/index.html?q=pointe#examples/en/controls/PointerLockControls
     */
    selector?: string;
}
declare const _default: import("vue").DefineComponent<{
    camera: {
        type: import("vue").PropType<Camera>;
    };
    makeDefault: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    domElement: {
        type: import("vue").PropType<HTMLElement>;
    };
    selector: {
        type: import("vue").PropType<string>;
    };
}, {
    value: import("vue").Ref<(import("three").EventDispatcher<import("three").Event> & {
        enabled: boolean;
    }) | null>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "isLock"[], "isLock", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    camera: {
        type: import("vue").PropType<Camera>;
    };
    makeDefault: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    domElement: {
        type: import("vue").PropType<HTMLElement>;
    };
    selector: {
        type: import("vue").PropType<string>;
    };
}>> & {
    onIsLock?: ((...args: any[]) => any) | undefined;
}, {
    makeDefault: boolean;
}, {}>;
export default _default;
