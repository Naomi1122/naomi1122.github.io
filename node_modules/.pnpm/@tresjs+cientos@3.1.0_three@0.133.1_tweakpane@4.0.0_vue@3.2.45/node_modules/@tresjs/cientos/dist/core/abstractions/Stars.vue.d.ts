export interface StarsProps {
    /**
     * The size of the stars.
     *
     * @type {number}
     * @memberof StarsProps
     * @default 0.1
     */
    size?: number;
    /**
     * keep the same size regardless distance.
     *
     * @type {boolean}
     * @memberof StarsProps
     * @default true
     */
    sizeAttenuation?: boolean;
    /**
     * show transparency on the stars texture.
     *
     * @type {boolean}
     * @memberof StarsProps
     * @default true
     */
    transparent?: boolean;
    /**
     * enables the WebGL to know when not to render the pixel.
     *
     * @type {number}
     * @memberof StarsProps
     * @default 0.01
     */
    alphaTest?: number;
    /**
     * number of stars.
     *
     * @type {number}
     * @memberof StarsProps
     * @default 5000
     */
    count?: number;
    /**
     * depth of star's shape.
     *
     * @type {number}
     * @memberof StarsProps
     * @default 50
     */
    depth?: number;
    /**
     * Radius of star's shape.
     *
     * @type {number}
     * @memberof StarsProps
     * @default 100
     */
    radius?: number;
    /**
     * texture of the stars.
     *
     * @type {string}
     * @memberof StarsProps
     * @default null
     */
    alphaMap?: null;
}
declare const _default: import("vue").DefineComponent<{
    alphaTest: {
        type: import("vue").PropType<number>;
        default: number;
    };
    transparent: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    alphaMap: {
        type: import("vue").PropType<null>;
        default: null;
    };
    size: {
        type: import("vue").PropType<number>;
        default: number;
    };
    count: {
        type: import("vue").PropType<number>;
        default: number;
    };
    sizeAttenuation: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    radius: {
        type: import("vue").PropType<number>;
        default: number;
    };
    depth: {
        type: import("vue").PropType<number>;
        default: number;
    };
}, {
    value: import("vue").ShallowRef<any>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    alphaTest: {
        type: import("vue").PropType<number>;
        default: number;
    };
    transparent: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    alphaMap: {
        type: import("vue").PropType<null>;
        default: null;
    };
    size: {
        type: import("vue").PropType<number>;
        default: number;
    };
    count: {
        type: import("vue").PropType<number>;
        default: number;
    };
    sizeAttenuation: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    radius: {
        type: import("vue").PropType<number>;
        default: number;
    };
    depth: {
        type: import("vue").PropType<number>;
        default: number;
    };
}>>, {
    alphaTest: number;
    transparent: boolean;
    alphaMap: null;
    size: number;
    count: number;
    sizeAttenuation: boolean;
    radius: number;
    depth: number;
}, {}>;
export default _default;
