import { Texture } from 'three';
export interface PBRMaterialOptions {
    /**
     * List of texture maps to load.
     *
     * @type {string[]}
     * @memberof PBRMaterialOptions
     */
    maps: string[];
    /**
     * Path to the texture maps.
     *
     * @type {('png' | 'jpg')}
     * @memberof PBRMaterialOptions
     */
    ext: 'png' | 'jpg';
}
export interface PBRTextureMaps {
    [key: string]: Texture | null;
}
/**
 * Composable for loading textures.
 *
 * ```ts
 * import { useTexture } from 'tres'
 *
 * const pbrTexture = await useTexture({
 *  map: 'path/to/texture.png',
 *  displacementMap: 'path/to/displacement-map.png',
 *  roughnessMap: 'path/to/roughness-map.png',
 *  normalMap: 'path/to/normal-map.png',
 *  ambientOcclusionMap: 'path/to/ambient-occlusion-map.png',
 * })
 * ```
 * Then you can use the texture in your material.
 *
 * ```vue
 * <TresMeshStandardMaterial v-bind="pbrTexture" />
 * ```
 * @see https://tresjs.org/examples/load-textures.html
 * @export
 * @param {(Array<string> | { [key: string]: string })} paths
 * @return {*}  {(Promise<Texture | Array<Texture> | PBRTextureMaps>)}
 */
export declare function useTexture(paths: Array<string> | {
    [key: string]: string;
}): Promise<Texture | Array<Texture> | PBRTextureMaps>;
